name: GitHub Runner

on: 
  workflow_dispatch:

jobs:
#   Start-aws-ec2:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Start EC2
#         run: |
#           aws ec2 start-instances --instance-ids ${{secrets.AWS_EC2_INSTANCE_ID }} 
#         env:
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
          
#   Sleep-ec2:
#     needs: Start-aws-ec2
#     runs-on: ubuntu-latest
#     steps:
#       - name: Waiting EC2 to Start
#         run: |
#           sleep 60
          
  Check-ec2-Status:
    #needs: Sleep-ec2
    runs-on: ubuntu-latest
    env:
      checkstatus: ''
    steps:
      - name: Checking status of EC2
        id: statusCheck
        run: |
          aws ec2 describe-instance-status --instance-id ${{secrets.AWS_EC2_INSTANCE_ID }} | jq -r '.InstanceStatuses[] | .InstanceState | .Name'
          #echo "Status=$status"
          #echo '::set-output name=SELECTED_COLOR::$status'
      #- name: status
        #run: echo "The selected color is ${{ steps.statusCheck.outputs.SELECTED_COLOR }}"
  
#   Build:
#     needs: Check-ec2-Status
#     runs-on: self-hosted
#     steps:
#       - name: Build ECOMM
#         run: |
#           echo "Hello world"
          
#   Stop-aws-ec2:
#     needs: Build
#     runs-on: ubuntu-latest
#     steps:
#       - name: Stop EC2
#         run: |
#           aws ec2 stop-instances --instance-ids ${{secrets.AWS_EC2_INSTANCE_ID }}
#         env:
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
          
          
